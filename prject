//Nik Leung
//Unit 3 Project
//Lens Pellitier
import ddf.minim.*;

Minim minim;
AudioSample clicksound;
//ints
int mode;
final int stamping = -1;
final int drawing = 1;

//pimage
PImage knife;

//colors
color wt = color(255);
color black = color(0);
color background = color(240);
color ind = color(180);
color red = color(255, 0, 0);
color green = color(0, 255, 0);
color blue = color(0, 0, 255);
color orange = color(255, 128, 0);
color aqua = color(0, 255, 255);
color purple = color(127, 0, 255);
color pink = color(255, 0, 255);

//vars
float strk;
float shde;
float sliderX1;
float sliderX2;
float strkind;

void setup() {
  size(800, 800);
  sliderY = 300;
  shade = 0;
  mode = drawing;
  minim = new Minim(this);
  clicksound=minim.loadSample("clicksound.mp3",512);
}

void draw() {
  background(background);
  if (mode==stamping) {
    stamping();
  } else if (mode==drawing) {
    drawing();
  } else println("smash that bug!");

  drawRectButton(100, 100, 200, 80, red);
  drawCircleButton(450, 140, 40, blue);
  stroke(0);
  line(150, 0, 150, 800);
  line(0, 150, 150, 150);

  //slider
  strokeWeight(5);
  drawslider(400, 50, 500);

  //indicator
  fill(ind);
  stroke(0);
  ellipse(75, 75, 120, 120);
}

void mouseReleased() {
  //rect click
  if (mouseX > 100 && mouseX < 300 && mouseY > 100 && mouseY < 180) {
    ind = red;
    clicksound.trigger();
  }
  //circular click
  if (dist(mouseX, mouseY, 450, 140) < 40) {
    ind = blue;
    clicksound.trigger();
  }
}

//rect button
void drawRectButton(int rx, int ry, int w, int h, color fillColor) {
  if (mouseX > rx && mouseX < rx + w && mouseY > ry && mouseY < ry + h) {
    stroke(wt);
  } else {
    stroke(black);
  }
  fill(fillColor);
  rect(rx, ry, w, h);
}

//circular button
void drawCircleButton(int cx, int cy, int r, color fillColor) {
  if (dist(mouseX, mouseY, cx, cy) < r) {
    stroke(wt);
  } else {
    stroke(black);
  }
  fill(fillColor);
  ellipse(cx, cy, r * 2, r * 2);
}

void drawslider(float x, float ytop, float length) {
  float ybot = ytop + length;

  stroke(wt);
  line(x, ytop, x, ybot);

  if (dist(mouseX,mouseY,x,sliderY)<25) {
    stroke(wt);
  } else {
    stroke(black);
  }

  fill(black);
  circle(x, sliderY, 50);
}

void controlSlider() {
  if (mouseX > 375 && mouseX < 425 && mouseY > 50 && mouseY < 550) {
    sliderY = mouseY;
  }

  shade = map(sliderY, 50, 550, 0, 255);
}

float shade;
float sliderY;

void mouseDragged() {
  controlSlider();
}

//= shade, thickness

//void save();
//void load();

//void new();

//=buttontact

//add indicator

//add modes
