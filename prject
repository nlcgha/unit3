import ddf.minim.*;

Minim minim;
AudioSample clicksound;
//ints
int mode;
final int stamping = -1;
final int drawing = 1;

boolean draggingSlider = false;

//pimage
PImage knife;

//colors
color wt = color(255);
color black = color(0);
color background = color(240);
color ind = color(180);
color red = color(255, 0, 0);
color green = color(0, 255, 0);
color blue = color(0, 0, 255);
color orange = color(255, 128, 0);
color aqua = color(0, 255, 255);
color purple = color(127, 0, 255);
color pink = color(255, 0, 255);

//vars
float strk;
float shde;
float sliderX1;
float sliderX2;
float strkind;

float shade = 0;
float sliderY = 300;

void setup() {
  size(800, 800);
  background(background);
  mode = drawing;
  minim = new Minim(this);
  clicksound = minim.loadSample("clicksound.mp3", 512);
}

void draw() {
  if (mode == stamping) {
    stamping();
  } else if (mode == drawing) {
    drawing();
  } else println("smash that bug!");

  //toolbar outline
  noStroke();
  fill(background);
  rect(0, 0, 150, 800);
  stroke(1);
  stroke(0);
  line(150, 0, 150, 800);
  line(0, 150, 150, 150);

  //color buttons, background button
  drawCircleButton(40, 200, 50, blue);
  drawCircleButton(110, 200, 50, red);

  //sliders for strk and shde
  strokeWeight(2);
  drawslider(40, 300, 300);

  //Save, load, new buttons

  //stamp button

  //indicator
  fill(ind);
  stroke(strk);
  ellipse(75, 75, 120, 120);
}

//rect button
void drawRectButton(int rx, int ry, int w, int h, color fillColor) {
  if (mouseX > rx && mouseX < rx + w && mouseY > ry && mouseY < ry + h) {
    stroke(240);
    ind = fillColor;
    clicksound.trigger();
  } else {
    stroke(black);
  }
  fill(fillColor);
  rect(rx, ry, w, h);
}

//circular button
void drawCircleButton(int cx, int cy, int r, color fillColor) {
  if (dist(mouseX, mouseY, cx, cy) < r && mousePressed) {
    stroke(240);
    ind = fillColor;
    clicksound.trigger();
  } else {
    stroke(black);
  }
  fill(fillColor);
  ellipse(cx, cy, r, r);
}

void drawslider(float x, float ytop, float length) {
  float ybot = ytop + length;

  stroke(180);
  line(x, ytop, x, ybot);

  if (dist(mouseX, mouseY, x, sliderY) < 25) {
    stroke(wt);
  } else {
    stroke(black);
  }

  fill(black);
  circle(x, sliderY, 25);
}

void controlSlider() {
  if (draggingSlider) {
    sliderY = constrain(mouseY, 300, 600);
    shade = map(sliderY, 300, 600, 0, 255);
    shde = shade;
  }
}

void mousePressed() {
  if (dist(mouseX, mouseY, 40, sliderY) < 25) {
    draggingSlider = true;
    clicksound.trigger();
    return;
  }

  if (dist(mouseX, mouseY, 40, 200) < 50) {
    ind = blue;
    clicksound.trigger();
  } else if (dist(mouseX, mouseY, 110, 200) < 50) {
    ind = red;
    clicksound.trigger();
  }
}

void mouseReleased() {
  draggingSlider = false;
}

void mouseDragged() {
  controlSlider();
}

void drawing() {
  if (mousePressed && mouseX > 150) {
    stroke(ind);
    strokeWeight(strk > 0 ? strk : 1);
    line(pmouseX, pmouseY, mouseX, mouseY);
  }
}

void stamping() {
}
