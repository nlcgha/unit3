import ddf.minim.*;

//misc vars
PImage knife;
Minim minim;
AudioPlayer clicksound;

//modes
int mode;
final int stamping = -1;
final int drawing = 1;

boolean draggingSliderShade = false;
boolean draggingSliderStroke = false;

//vars for slider(s)
float strokeweight = 1;
float sliderY1 = 500;
float sliderX1 = 110;
float shade = 0;
float sliderY = 500;
float sliderX = 40;

//colors
color wt = color(255);
color black = color(0);
color background = color(240);
color ind = color(180);
color red = color(255, 0, 0);
color green = color(0, 255, 0);
color blue = color(0, 0, 255);
color orange = color(255, 128, 0);
color aqua = color(0, 255, 255);
color purple = color(127, 0, 255);
color pink = color(255, 0, 255);

void setup() {
  size(800, 800);
  background(background);
  mode = drawing;
  minim = new Minim(this);
  clicksound = minim.loadFile("clicksound.mp3", 512);
  knife = loadImage("knife.png");

//default values for settings
  noStroke();
  fill(wt);
  rect(151, 0, 690, 800);
  textAlign(CENTER, CENTER);
  textSize(14);
}

void draw() {
  color shaded = color(shade);
  if (mode == drawing && mousePressed && mouseX > 150) {
    stroke(ind);
    strokeWeight(strokeweight);
    line(pmouseX, pmouseY, mouseX, mouseY);
  } else if (mode == stamping && mousePressed && mouseX > 150) {
    image(knife, mouseX, mouseY, 50, 50);
  }

  stroke(0);
  strokeWeight(1);
  fill(background);
  rect(0, 0, 150, 800);
  line(150, 0, 150, 800);
  line(0, 150, 150, 150);

//color buttons
  drawCircleButton(40, 200, 50, blue);
  drawCircleButton(110, 200, 50, red);
  drawCircleButton(40, 275, 50, green);
  drawCircleButton(110, 275, 50, orange);
  drawCircleButton(40, 350, 50, aqua);
  drawCircleButton(110, 350, 50, pink);
  drawCircleButton(40, 425, 50, purple);
  drawCircleButton(110, 425, 50, shaded);

//Sliders
  strokeWeight(2);
  drawslider(sliderX, 500, 100, sliderY);
  drawslider(sliderX1, 500, 100, sliderY1);

//stamp button
  drawStampButton(47.5, 625, 55, 55);

//new button
  drawNewButton(25, 685, 100, 30);

//save button
  drawSaveButton(25, 725, 100, 30);

//load button
  drawLoadButton(25, 765, 100, 30);

//indicator
  fill(ind);
  stroke(0);
  strokeWeight(strokeweight);
  ellipse(75, 75, 120, 120);
}

void drawLoadButton(float rx, int ry, int w, int h) {
  strokeWeight(0.75);
  fill(wt);
  rect(rx, ry, w, h);
  fill(0);
  text("Load", rx + w / 2, ry + h / 2);
}

void drawNewButton(float rx, int ry, int w, int h) {
  if (mouseX > rx && mouseX < rx + w && mouseY > ry && mouseY < ry + h && mousePressed) {
    stroke(240);
    fill(wt);
    rect(151, 0, 690, 800);
    if (!clicksound.isPlaying()) {
      clicksound.rewind();
      clicksound.play();
    }
  } else {
    stroke(0);
  }
  strokeWeight(0.75);
  fill(wt);
  rect(rx, ry, w, h);
  stroke(0);
  fill(0);
  text("New", rx + w / 2, ry + h / 2);
}

void drawSaveButton(float rx, int ry, int w, int h) {
  strokeWeight(0.75);
  fill(wt);
  rect(rx, ry, w, h);
  fill(0);
  text("Save", rx + w / 2, ry + h / 2);
}

void drawStampButton(float rx, int ry, int w, int h) {
  if (mouseX > rx && mouseX < rx + w && mouseY > ry && mouseY < ry + h && mousePressed) {
    stroke(240);
    if (!clicksound.isPlaying()) {
      clicksound.rewind();
      clicksound.play();
    }
    mode = stamping;
  } else {
    stroke(0);
  }
  strokeWeight(0.75);
  fill(wt);
  rect(rx, ry, w, h);
  image(knife, rx + 3, ry + 3, 50, 50);
}

void drawCircleButton(int cx, int cy, int r, color fillColor) {
  if (dist(mouseX, mouseY, cx, cy) < r && mousePressed) {
    stroke(240);
    ind = fillColor;
    if (!clicksound.isPlaying()) {
      clicksound.rewind();
      clicksound.play();
    }
    mode = drawing;
  } else {
    stroke(0);
  }
  fill(fillColor);
  ellipse(cx, cy, r, r);
}

void drawslider(float x, float ytop, float length, float sliderY) {
  float ybot = ytop + length;

  stroke(180);
  line(x, ytop, x, ybot);

  if (dist(mouseX, mouseY, x, sliderY) < 25) {
    stroke(wt);
  } else {
    stroke(black);
  }

  fill(black);
  circle(x, sliderY, 25);
}

void controlSlider() {
  if (draggingSliderShade) {
//stops the circle leaving the screen :>
    sliderY = constrain(mouseY, 500, 600);
    shade = map(sliderY, 500, 600, 0, 255);
  }
  if (draggingSliderStroke) {
    sliderY1 = constrain(mouseY, 500, 600);
    strokeweight = map(sliderY1, 500, 600, 0, 20);
  }
}

void mousePressed() {
  if (dist(mouseX, mouseY, sliderX, sliderY) < 12.5) {
    if (!clicksound.isPlaying()) {
      clicksound.rewind();
      clicksound.play();
    }
    draggingSliderShade = true;
  } else if (dist(mouseX, mouseY, sliderX1, sliderY1) < 12.5) {
    if (!clicksound.isPlaying()) {
      clicksound.rewind();
      clicksound.play();
    }
    draggingSliderStroke = true;
  }
}

void mouseReleased() {
//when making these sliders i noticed you HAVE to be in the allocated space to drag it, this makes it so you can press and drag anywhere on the screen
  draggingSliderShade = false;
  draggingSliderStroke = false;

//save button
  if (mouseX > 25 && mouseX < 125 && mouseY > 725 && mouseY < 755) {
    selectOutput("Choose a name for your drawing <3", "saveImage");
    if (!clicksound.isPlaying()) {
      clicksound.rewind();
      clicksound.play();
    }
  }

//load button
  if (mouseX > 25 && mouseX < 125 && mouseY > 765 && mouseY < 795) {
    selectInput("Pick a file to load :>", "load");
    if (!clicksound.isPlaying()) {
      clicksound.rewind();
      clicksound.play();
    }
  }
}

void mouseDragged() {
  controlSlider();
}

void saveImage(File f) {
  if (f != null) {
    PImage canvas = get(151, 0, 689, 800);
    canvas.save(f.getAbsolutePath());
  }
}

void load(File f) {
  if (f != null) {
    PImage pic = loadImage(f.getPath());
    image(pic, 151, 0);
  }
}
